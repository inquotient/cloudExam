1. Virtual Box 6.0 혹은 Vmware player 설치
2. Vagrant 설치
3. cmd에 vagrant init
4. 명령어 실행경로에 존재하는 Vagrantfile에서 config.vm.box 옵션에 centos/7으로 변경
5. Vagrantfile에 다음 내용 추가
    config.vm.provider "virtualbox" do |vb|
    	vb.name="Node01"
    	vb.customize ["modifyvm", :id, "--cpus", 1]
    	vb.customize ["modifyvm", :id, "--memory", 2048]
       end
       
       config.vm.host_name = "node01"
       config.vm.network "public_network", ip: "192.168.56.101"
       config.vm.network "forwarded_port", guest: 3306, host: 19211, auto_correct: false, id: "ssh"
       config.vm.network "forwarded_port", guest: 80, host: 10080
       config.vm.provision "shell", path: "bash_ssh_conf.sh"
       
6. vagrant 플러그인 vagrant-vbguest 설치
   - vagrant plugin install  vagrant-vbguest
7. vagrant up 명령 실행

8. ==> node01: Rsyncing folder: /cygdrive/c/Users/HPE/ => /vagrant
   interrupt 걸기
   
9. MySQL 저장소 설정
   - sudo yum -y install http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
   
10. MySQL 설치   
   - sudo yum -y install mysql-community-server

11. MySQL 데몬 활성화
   - systemctl enable mysqld
   
12. MySQL 데몬 실행
   - systemctl start mysqld
   
13. MySQL Login password 확인
   - cat /var/log/mysqld.log | grep password 실행시 해시값 복사
   
14. MySQL Login
   - mysql -uroot -p -h<hostname> --port<portnumber>
   
15. 유효한 패스워드 정책 확인
   - show variables like 'validate_password%';

16. 패스워드 정책 수준을 낮게 조정
   - set global validate_password_policy=LOW;

17. mysql의 root 계정의 비밀번호를 qwer1234로 변경
   - alter user 'root'@'localhost' identified by 'qwer1234';
   
---------------------------------------------------------------------

NODE01 MASTER DB
- IP : 192.168.10.11:3306
- DB : cloud_db
- USER :  user1:host1234
            replicate_user:host1234


NODE02 SLAVE DB
- IP : 192.168.10.12:3306
- DB : cloud_db
- USER :  user1:host1234

WINDOWS SLAVE DB
- IP : 59.29.224.79:3306
- DB : cloud_db
- USER :  user1:host1234


----------------------------------------------------------------------

위의 세팅대로 가상 호스트를 생성

1. VagrantFile에서 Node01의 설정을 복사하여 위의 IP 설정대로 Node02 호스트 설정

2. forwarded_port를 port 3306을 다른 13306으로 설정 (Node02을 설정)

3. vagrant up

4. 생성한 두 호스트에 cloud_db 생성
   - create database cloud_db default charset=utf8;
   
5. user1, replicate_user(db 동기화를 위한 master 계정) 생성
   - create user 'user1'@'%' identified by 'qwer1234';
   - create user 'replicate_user'@'%' identified by 'qwer1234';
   
6. 제대로 생성되었는지 mysql, db 데이터베이스에서 확인

7. user1 계정에 cloud_db에 대한 모든 권한 부여 및 'replicate_user'에게 모든 DB에 대해 replication slave로 설정 
   - grant all privileges on cloud_db.* to 'user1'@'%' identified by 'qwer1234';
   - grant replication slave on *.* to 'replicate_user'@'%';
   
8. Master Host의 ssh-config에서 IdentityFile 경로명 확인
   - vagrant ssh-config node01
   
9. Putty Gen에서 위의 단계에서 복사한 경로의 private_key를 로드하여 ppk파일로 저장

10. Putty에서 아래 내용대로 설정
    - hostname : localhost
    - Auth : 위의 단계에서 생성한 ppk파일

11. node01 호스트에 /etc/my.cnf 다음 내용 추가
    - server-id=1 (master server 번호는 1)
    - log_bin=mysql-bin (log파일을 mysql-bin으로 설정
    
12. node01 호스트에서 mysql 접속 후 다음 명령어를 실행하여 내용 복사
    - show master status

13. Window Host의 mysql에 root 권한으로 접속해서 다음 명령들 수행
    - create database cloud_db default charset=utf8
    - create user 'user3'@'%' identified by 'qwer1234';
    - grant all privileges on cloud_db.* to 'user3'@'%' with grant option; (8.0버전)
    
14. C:\ProgramData\MySQL\MySQL Server 8.0 경로에 존재하는 my.ini 설정파일 수정
    ※ notepad++에서 수정할 것
    - server-id=3
    - log_bin=log
    - replicate-do-db='cloud_db'
    
15. 윈도우 mysql 콘솔에서 다음내용 입력
    change master to\
    master_host="[master ip 주소]",\
    master_port=3306,\
    master_user="replicate_user",\
    master_password='qwer1234',\
    master_log_file='mysql-bin.000002',\
    master_log_pos=154;
    
※ error connecting to master 오류 아래내용 참조
   http://www.mysqlkorea.com/gnuboard4/bbs/board.php?bo_table=community_03&wr_id=2778
   
※ vagrant 제거 명령
   -vagrant destory
   -vagrant halt (vagrant 강제종료)
   -vagrant suspend (vagrant 중지)
   -vagrant resume (vagrant 재실행)
   -vagrant status (vagrant 상태확인)
   -vagrant ssh [hostname] (해당 호스트에 ssh로 접속)
   
※ service는 CentOS6 버전이하에서 systemctl은 CentOS7 버전이상에서 사용한다.
   
-----------------------------------------------------------------------------------------

1. slave 에서 기존 cloud_db를 삭제
   - drop database cloud_db
   
2. Master DB에서 지금까지의 데이터를 백업
   - mysqldump -u[계정명] -p -h [호스트ip] cloud_db > backup.sql (리눅스)
   - mysqldump --column-statistics=0 -u[계정명] -p -h [호스트ip] cloud_db > backup.sql (윈도우)

3. Master DB에서 백업한 데이터를 Slave DB에 복원
   - mysql -uroot -p cloud_db < backup.sql;

4. Master DB의 바이너리 로그 파일의 파일명과 Position
   - show master status;
   
5. Slave DB에서
   - Master DB의 복제 설정 (change to master ....)
   - Slave DB 재시작
   
6. Master DB에서의 변경 내용을 Slave DB에서 확인가능 -> 성공
